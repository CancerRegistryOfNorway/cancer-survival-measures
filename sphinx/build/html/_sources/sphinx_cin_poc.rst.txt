=================================== 
KNUT SANDBOX DB-Stata-DB POC Python
=================================== 

KNUT 1.1 "Analyserom/Datatilrettelegging" per 24.juni etter "operativt SGM" 22.juni:
==================================================================================== 

https://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html

Liten endring

Skal ikke dette funke a??

https://confluence.kreftregisteret.no/download/attachments/85139830/KNUT%20-%20Demo%2024.%20juni.pptx?api=v2

Preferred alternative KNUT 1.1
------------------------------

**MySQL -> < Stata > -> [MySQL]**

Statistical program read (via JDBC) from DWH and write (some) results to DB tables.

#. Tech: BJEK, BAA, GEDA, (STAU, NARN)	
#. Functionality: JOJH, MABJ, BAA
#. Users testing security : BAA, xxx, ...

General requirements: 
---------------------

#. authentication
#. authorization
#. JDBC communication encrypted 
#. logging
 
 * audit log (DB connection, data load)
 * Stata activity log
 * git + gitlab for 1) SQL SELECT statements and 2) Stata command files
 
5. **Sandbox** with routine for *automatic regulary deletion of files*:   
    #. special **VDI** with FS restrictions **(IN PROGRESS)**
    #. special **user** with std VDI user restrictions on FS (NOT USED)
6. functionality for end user (close to current UX)
#. formal user behaviour guidelines TBE
#. production security monitoring
#. compliance 
#. data integrity  

POC current focus:
------------------

#. java plugin for Stata
    #. authentication  
    #. authorization 
    #. logging

#. Sandbox

    #. VDI  

Model: 
------ 

**krg_core_dwh (MySQL) (RO-DB-service-account(s)) <-- JDBC --> Stata (RO-DB-service-account(s), password)**

**Stata_AD_user -> load.JAR (Vault libs for Java, AD and MySQL) -> stata.JDBC(RO-DB-service-account(s), OTP)**

#. JDBC definitions will be in a Java program using Stata-Java API. 
#. The Java program may also communicate with *Vault* for OTP etc. and *Greylog* for logging. 

POC:
----

#. A POC is available using Python (and Stata-Python API)

https://gitlab.kreftregisteret.no/baa/baa_knut_poc_db_stata_db  

Specific requirements: 
----------------------

The Stata JDBC arguments; username, password, (URL?), SHALL NOT be exposed:

 #. The POC source code do not hard code the tokens.
 #. The Stata user can not apply Stata debugging to expose the tokens.

Status
    for a short moment the **security token password will be in clear text in memory** when passed to the Stata command *jdbc add*. 
	This behavior may be acceptable (then requirement changes to SHOULD NOT ...)  
	
POC provide two KRG Stata programs using Python sub-programs.

#. *python_poc_connect*  make a JDBC connection, using a sub-program which is a Python function (to be replacedwith Java program)  
#. *python_poc_load* load data from connection defined

The following mainly cover the connection, involving username and password. 

REQUIREMENT: The password SHALL NOT be exposed: 

#. **Stata debugging is turned off in the Python function** to disable tracing of clear text arguments. All other possibilitis to see the tokens are restricted using the Stata commands; **capture** and **quietly**. 

#. The program making the connection can be run automatically when starting Stata from the Stata system init file *sysprofile.do* 

Python function used in Stata program **python_poc_connect**  

.. literalinclude:: ../../python_poc_connect.ado
   :language: python
   :caption: python_poc_connect()
   :name: py_python_poc_connect
   :lines: 61-95
   :lineno-start: 61
   :emphasize-lines: 6,7,23,25

Stata use case:
---------------

.. literalinclude:: ../../poc_test.do
   :language: stata
   :caption: poc_test.do
   :name: poc_test.do
   :linenos:
   :lines: 30-42
   :lineno-start: 30
   :emphasize-lines: 3,12

   
After loading data into Stata user continue with standard Stata commands.

Stata program **python_poc_connect**, excluding sub-programs  
------------------------------------------------------------

.. literalinclude:: ../../python_poc_connect.ado
   :language: stata
   :caption: python_poc_connect.ado
   :name: stata_python_poc_connect
   :linenos:
   :lines: 1-52
   :emphasize-lines: 42
